# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-08-15 07:16
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StartDate', models.DateField()),
                ('ActivityName', models.CharField(max_length=255)),
                ('addr', models.CharField(max_length=255)),
                ('introducer', models.CharField(max_length=255)),
                ('PositionOfIntroducer', models.CharField(max_length=255)),
                ('IsLinkedNow', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AwardInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AwardDate', models.DateField()),
                ('AwardLevel', models.CharField(max_length=255)),
                ('HoldWorkUnit', models.CharField(max_length=255)),
                ('AwardDetail', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='baseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('nameUsed', models.CharField(blank=True, max_length=40, null=True)),
                ('nation', models.CharField(blank=True, max_length=40, null=True)),
                ('NativePlace', models.CharField(blank=True, max_length=100, null=True)),
                ('religious', models.CharField(blank=True, max_length=40, null=True)),
                ('BornPlace', models.CharField(blank=True, max_length=100, null=True)),
                ('BornDate', models.DateField()),
                ('IDCardNum', models.CharField(max_length=40)),
                ('PartyDocuNum', models.CharField(blank=True, max_length=100, null=True)),
                ('BranchParty', models.CharField(blank=True, max_length=100, null=True)),
                ('BranchPartyNum', models.CharField(blank=True, max_length=100, null=True)),
                ('MobilePhone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=40, null=True)),
                ('img', models.ImageField(blank=True, max_length=0, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='姓名')),
                ('MobilePhone', models.CharField(max_length=20, verbose_name='手机')),
                ('qqNum', models.CharField(max_length=20, verbose_name='QQ号')),
                ('gender', models.CharField(max_length=255, verbose_name='性别')),
                ('BornDate', models.DateField(verbose_name='出生日期')),
                ('nation', models.CharField(max_length=255, verbose_name='民族')),
                ('EduExperience', models.CharField(max_length=100, verbose_name='教育经历')),
                ('PropertyOfWorkUnit', models.CharField(max_length=100, verbose_name='教育经历')),
                ('WorkUnit', models.CharField(max_length=100, verbose_name='工作职务')),
                ('DateComeIntoMinGe', models.DateField(verbose_name='加入日期')),
                ('BranchPartyName', models.CharField(max_length=255, verbose_name='支部名称')),
            ],
            options={
                'verbose_name': '联系人',
            },
        ),
        migrations.CreateModel(
            name='education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college', models.CharField(max_length=100)),
                ('major', models.CharField(max_length=100)),
                ('ComeIntoSchoolDate', models.DateField()),
                ('GraduateDate', models.DateField()),
                ('EduDegree', models.CharField(max_length=100)),
                ('EduExperience', models.CharField(max_length=100)),
                ('EduType', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('relation', models.CharField(max_length=255)),
                ('BornDate', models.DateField()),
                ('EducationLevel', models.CharField(max_length=255)),
                ('PoliticalIdentity', models.CharField(max_length=255)),
                ('DepartmentPosition', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MinGeRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BornDate', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('relation', models.CharField(max_length=255)),
                ('EducationLevel', models.CharField(max_length=255)),
                ('PoliticalIdentity', models.CharField(max_length=255)),
                ('DepartmentPosition', models.CharField(max_length=255)),
                ('IsLinkedNow', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PositionSincePast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('WorkType', models.CharField(max_length=255)),
                ('Which', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Punish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PunishDate', models.DateField()),
                ('details', models.CharField(max_length=255)),
                ('CancelDetail', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkUnit', models.CharField(max_length=100)),
                ('WorkPosition', models.CharField(default='', max_length=100)),
                ('PropertyOfWorkUnit', models.CharField(max_length=100)),
                ('AdministrativeLevel', models.CharField(blank=True, max_length=100)),
                ('WorkUnitAddr', models.CharField(max_length=255)),
                ('WorkPhone', models.CharField(max_length=20)),
                ('WorkPostcode', models.CharField(max_length=6)),
                ('HomeAddr', models.CharField(max_length=255)),
                ('HomePhone', models.CharField(max_length=20)),
                ('HomePostcode', models.CharField(max_length=6)),
                ('ContactAddrType', models.CharField(max_length=255)),
                ('specialty', models.CharField(max_length=255)),
                ('WelfareLevel', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=11, null=True)),
                ('image', models.ImageField(default='', upload_to='image/%Y/%m')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='', max_length=6)),
                ('is_manager', models.BooleanField(default=False)),
                ('login_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='登录时间')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
